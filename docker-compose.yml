version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: chatai-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-chatai}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-chatai_password}
      POSTGRES_DB: ${POSTGRES_DB:-chatai}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatai"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: chatai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chatai-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://${POSTGRES_USER:-chatai}:${POSTGRES_PASSWORD:-chatai_password}@postgres:5432/${POSTGRES_DB:-chatai}?schema=public
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app/backend
      - /app/node_modules
    command: npm start

volumes:
  postgres_data:
  redis_data:
